# Stubs for editor autocomplete. Generated.
from __future__ import annotations
import pysam
import integrative_transcriptomics_viewer as itv
from typing import Any, Optional, Sequence, Mapping, Callable, Dict, Iterable, Literal, Union

class Configuration:
    def plot_by_classification_as_tabs(self, bams_dict: Mapping[str, Any] = ..., feature: Any = ..., classification_from: Any = ..., annotation_matching: Any = ..., plot_type: str = ..., page_title: str = ..., add_all_tab: bool = ..., padding_perc: float = ...,
            *,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...
    def plot_by_classification_over_features(self, bams_dict: Mapping[str, Any] = ..., features_list: Sequence[Any] = ..., classification_from: Any = ..., annotation_matching: Any = ..., page_title: str = ...,
            *,
            padding_perc: float = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...
    def plot_by_features_as_tab(self, features_list: Sequence[Any] = ..., bams_dict: Mapping[str, Any] = ..., plot_type: str = ..., page_title: str = ..., cellbarcode_whitelist: Any = ..., cellbarcode_from: Any = ...,
            *,
            padding_perc: float = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...
    def plot_exons(self, feature: Any = ..., merge_exons: bool = ..., N_per_row: int = ..., view_width: int = ..., as_widget: bool = ...,
            *,
            padding_perc: float = ...,
            add_track_label: str | bool = ...,
            add_reads_label: str | bool = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            fill_coverage: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...
    def plot_exons_slices(self, feature: Any = ..., merge_exons: bool = ..., normalize_interval_width: bool = ..., padding_perc: float = ...,
            *,
            add_track_label: str | bool = ...,
            add_reads_label: str | bool = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...
    def plot_feature(self, feature: Any = ...,
            *,
            padding_perc: float = ...,
            add_track_label: str | bool = ...,
            add_reads_label: str | bool = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...
    def plot_features(self, features: Iterable[Any] = ..., output_format: str = ...,
            *,
            padding_perc: float = ...,
            add_track_label: str | bool = ...,
            add_reads_label: str | bool = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...
    def plot_interval(self, view_width: int = ...,
            *,
            padding_perc: float = ...,
            add_track_label: str | bool = ...,
            add_reads_label: str | bool = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...
    def plot_intervals(self, view_width: int = ..., interval_list: Any = ..., data_list: Any = ..., N_per_row: int = ...,
            *,
            padding_perc: float = ...,
            add_track_label: str | bool = ...,
            add_reads_label: str | bool = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...
    def plot_read(self, read_id: str = ..., bams_dict: Mapping[str, Any] = ..., interval: Union[str, Any] = ..., output_format: str = ..., silence_error: bool = ...,
            *,
            padding_perc: float = ...,
            add_track_label: str | bool = ...,
            add_reads_label: str | bool = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Optional[Any]: ...
    def plot_reads(self, read_ids: Sequence[str] = ..., bams_dict: Mapping[str, Any] = ..., interval: Any = ..., output_format: str = ...,
            *,
            padding_perc: float = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Optional[Union[int, Mapping[str, int]]] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
    ) -> Optional[Any]: ...
    def plot_splice_junctions(self, feature: Any = ..., view_width: int = ..., as_widget: bool = ...,
            *,
            padding_perc: float = ...,
            add_track_label: str | bool = ...,
            add_reads_label: str | bool = ...,
            add_coverage_label: str | bool = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: bool | Mapping[str, Optional[str]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: str = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: Literal["5p", "3p"] = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            fill_coverage: bool = ...,
            tighter_track: bool = ...,
    ) -> Any: ...

# Auto-generated by tools/generate_convenience_stub.py; do not edit by hand.
from __future__ import annotations
from typing import Any, Callable, Mapping, Optional, Union


class Configuration:
    def plot_by_classification_as_tabs(
            self,
            bams_dict: Mapping[str, Any],
            feature: Any,
            classification_from: Any,
            annotation_matching: Any,
            plot_type: Any = ...,
            page_title: Any = ...,
            add_all_tab: Any = ...,
            padding_perc: float = ...,
            *,
            add_track_label: Union[str, bool] = ...,
            add_reads_label: Union[str, bool] = ...,
            add_coverage_label: Union[str, bool] = ...,
            with_axis: bool = ...,
            with_bed_label: Union[bool, Mapping[str, Optional[str]]] = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Any: ...

    def plot_by_classification_over_features(
            self,
            bams_dict: Mapping[str, Any],
            features_list: Any,
            classification_from: Any,
            annotation_matching: Any,
            page_title: Any = ...,
            *,
            padding_perc: float = ...,
            add_track_label: Union[str, bool] = ...,
            add_reads_label: Union[str, bool] = ...,
            add_coverage_label: Union[str, bool] = ...,
            with_axis: bool = ...,
            with_bed_label: Union[bool, Mapping[str, Optional[str]]] = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Any: ...

    def plot_by_features_as_tab(
            self,
            features_list: Any,
            bams_dict: Mapping[str, Any],
            plot_type: Any = ...,
            page_title: Any = ...,
            cellbarcode_whitelist: Any = ...,
            cellbarcode_from: Any = ...,
            *,
            padding_perc: float = ...,
            add_track_label: Union[str, bool] = ...,
            add_reads_label: Union[str, bool] = ...,
            add_coverage_label: Union[str, bool] = ...,
            with_axis: bool = ...,
            with_bed_label: Union[bool, Mapping[str, Optional[str]]] = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_width: Optional[int] = ...,
            view_margin_y: Optional[int] = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Any: ...

    def plot_exons(
            self,
            feature: Any,
            merge_exons: Any = ...,
            N_per_row: Any = ...,
            view_width: Optional[int] = ...,
            as_widget: Any = ...,
            *,
            bams_dict: Mapping[str, Any],
            with_axis: bool = ...,
            with_bed: bool = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Any: ...

    def plot_feature(
            self,
            feature: Any,
            *,
            bams_dict: Mapping[str, Any],
            padding_perc: float = ...,
            add_track_label: Union[str, bool] = ...,
            add_reads_label: Union[str, bool] = ...,
            add_coverage_label: Union[str, bool] = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: Union[bool, Mapping[str, Optional[str]]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Any: ...

    def plot_features(
            self,
            features: Any,
            output_format: Any = ...,
            *,
            bams_dict: Mapping[str, Any],
            padding_perc: float = ...,
            add_track_label: Union[str, bool] = ...,
            add_reads_label: Union[str, bool] = ...,
            add_coverage_label: Union[str, bool] = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: Union[bool, Mapping[str, Optional[str]]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Any: ...

    def plot_interval(
            self,
            view_width: Optional[int] = ...,
            *,
            bams_dict: Mapping[str, Any],
            padding_perc: float = ...,
            add_track_label: Union[str, bool] = ...,
            add_reads_label: Union[str, bool] = ...,
            add_coverage_label: Union[str, bool] = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: Union[bool, Mapping[str, Optional[str]]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Any: ...

    def plot_intervals(
            self,
            view_width: Optional[int] = ...,
            interval_list: Any = ...,
            data_list: Any = ...,
            N_per_row: Any = ...,
            *,
            bams_dict: Mapping[str, Any],
            padding_perc: float = ...,
            add_track_label: Union[str, bool] = ...,
            add_reads_label: Union[str, bool] = ...,
            add_coverage_label: Union[str, bool] = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: Union[bool, Mapping[str, Optional[str]]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Any: ...

    def plot_read(
            self,
            read_id: Any,
            bams_dict: Mapping[str, Any],
            interval: Union[str, Any] = ...,
            output_format: str = ...,
            silence_error: bool = ...,
            *,
            padding_perc: float = ...,
            add_track_label: Union[str, bool] = ...,
            add_reads_label: Union[str, bool] = ...,
            add_coverage_label: Union[str, bool] = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: Union[bool, Mapping[str, Optional[str]]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Optional[Any]: ...

    def plot_reads(
            self,
            read_ids: Any,
            bams_dict: Mapping[str, Any],
            interval: Union[str, Any] = ...,
            output_format: str = ...,
            *,
            padding_perc: float = ...,
            add_track_label: Union[str, bool] = ...,
            add_reads_label: Union[str, bool] = ...,
            add_coverage_label: Union[str, bool] = ...,
            with_reads: bool = ...,
            with_axis: bool = ...,
            with_coverage: bool = ...,
            with_bed: bool = ...,
            with_bed_label: Union[bool, Mapping[str, Optional[str]]] = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            vertical_layout_reads: bool = ...,
            max_read_depth: Optional[int] = ...,
            max_read_count: Optional[int] = ...,
            include_secondary: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            row: Optional[Any] = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Optional[Any]: ...

    def plot_splice_junctions(
            self,
            feature: Any,
            view_width: Optional[int] = ...,
            as_widget: Any = ...,
            *,
            bams_dict: Mapping[str, Any],
            with_axis: bool = ...,
            with_bed: bool = ...,
            coverage_bin_size: int = ...,
            coverage_height: int = ...,
            coverage_tag: Optional[str] = ...,
            coverage_tag_fn: Optional[Callable[[Any], str]] = ...,
            coverage_by_strand: bool = ...,
            priming_orientation: str = ...,
            strand_specific_bam: bool = ...,
            strand_specific_bed: bool = ...,
            include_read_fn: Optional[Callable[[Any], bool]] = ...,
            read_color_fn: Optional[Callable[[Any], str]] = ...,
            quick_consensus: bool = ...,
            draw_clipping: bool = ...,
            view_margin_y: Optional[int] = ...,
            fill_coverage: bool = ...,
            coverage_track_max_y: Union[int, Mapping[str, int], None] = ...,
            draw_coverage_y_axis: bool = ...,
            tighter_track: bool = ...,
            **kwargs: Any,
    ) -> Any: ...
